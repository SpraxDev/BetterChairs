# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  # Compile the project
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Caches
      - name: 'Cache: Maven-Repository'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # Use Java 8 to compile old Spigot version
      - uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: temurin

      # Maven dependencies that need to be compiled manually
      - name: Compile Spigot versions
        uses: SpraxDev/Action-SpigotMC@v4
        with:
          versions: 1.8, 1.8.3, 1.8.8, 1.9.2, 1.9.4, 1.10.2, 1.11.2, 1.12.2, 1.13, 1.13.2, 1.14.4, 1.15.2, 1.16.1, 1.16.3, 1.16.5
          forceRun: false # Disables the check for existing files in the local maven repository

      # Use Java 16 for Spigot 1.17
      - uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: temurin

      - name: Compile Spigot versions
        uses: SpraxDev/Action-SpigotMC@v4
        with:
          versions: 1.17
          forceRun: false # Disables the check for existing files in the local maven repository

      # Use Java 17 for everything else
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - name: Compile Spigot versions
        uses: SpraxDev/Action-SpigotMC@v4
        with:
          versions: 1.18.1, 1.18.2, 1.19
          forceRun: false # Disables the check for existing files in the local maven repository

      # Compile the project using maven
      - name: Build with Maven
        run: 'mvn -B -Duser.name="GitHub Runner on $GITHUB_REPOSITORY (id=$GITHUB_RUN_ID)" clean package'

      # Upload the .jar file
      - name: 'Upload Build Artifact: BetterChairs.jar'
        uses: actions/upload-artifact@v3
        with:
          name: BetterChairs
          path: ./modules/betterchairs-plugin/target/BetterChairs*.jar

      # Run static code analysis
  #      - name: 'SonarCloud.io (static code analysis)'
  #        run: 'mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar'
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Check if the versions inside `pom.xml`, CHANGELOG.md and `./docs/version.txt`
  # match and that everything has been edited correctly when pushing a new release version
  check-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Extract version from the pom.xml and compare to docs/version.txt
        id: version_diff  # Outputs 'same' or 'diff'
        run: mkdir -p docs && echo $(grep --max-count=1 '<version>' pom.xml | awk -F '>' '{ print $2 }' | awk -F '<' '{ print $1 }') >> docs/version_new.txt && diff -q --ignore-space-change --strip-trailing-cr --ignore-blank-lines docs/version.txt docs/version_new.txt 2>&1 && echo "##[set-output name=result;]same" || echo "##[set-output name=result;]diff"

      - name: Check if extracted version matches docs/version.txt
        if: ${{ steps.version_diff.outputs.result == 'diff' }}
        uses: unsplash/comment-on-pr@master
        with:
          msg: "Versions in `pom.xml` and `docs/version.txt` are not the same! Please use the same version in both files."
          check_for_duplicate_msg: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if version from docs/version.txt is inside CHANGELOG.md
        id: inside_changelog  # Outputs 'yes' or 'no'
        run: verTxt=$(cat docs/version.txt) && grep -q "## Version ${verTxt}" CHANGELOG.md && echo "##[set-output name=result;]yes" || echo "##[set-output name=result;]no"

      - name: Check if extracted version matches docs/version.txt
        if: ${{ steps.inside_changelog.outputs.result == 'no' }}
        uses: unsplash/comment-on-pr@master
        with:
          msg: "`CHANGELOG.md` is missing changes for version in `docs/version.txt`!"
          check_for_duplicate_msg: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail Action when versions (from above) are not the same
        if: ${{ steps.version_diff.outputs.result == 'diff' }}
        run: echo "The versions inside pom.xml and docs/version.txt are not the same!" && exit -1

      - name: Fail Action when docs/version.txt not inside CHANGELOG.md
        if: ${{ steps.inside_changelog.outputs.result == 'no' }}
        run: echo "CHANGELOG.md is missing changes for version in docs/version.txt!" && exit -1
